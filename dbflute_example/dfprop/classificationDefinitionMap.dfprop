# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default map:{})
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{
#             ; topComment=[comment]; codeType=[String(default) or Number or Boolean]}
#             ; isCheckImplicitSet=[true or false(default)]
#             ; isUseDocumentOnly=[true or false(default)]
#             ; isSuppressAutoDeploy=[true or false(default)]
#         ; map:{code=[code]; name=[name]; alias=[alias]; comment=[comment]}
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    # example for implicit classification
    #; Flg = list:{
    #    ; map:{topComment=general boolean classification for every flg-column; codeType=Number}
    #    ; map:{code=1; name=True ; alias=Yes; comment=means valid}
    #    ; map:{code=0; name=False; alias=No ; comment=means invalid}
    #}
    # example for table classification
    #; MemberStatus = list:{
    #    ; map:{topComment=status of member from entry to withdrawal; codeType=String}
    #    ; map:{
    #        ; table=MEMBER_STATUS
    #        ; code=MEMBER_STATUS_CODE; name=MEMBER_STATUS_NAME
    #        ; comment=DESCRIPTION; orderBy=DISPLAY_ORDER
    #    }
    #}
}
# ----------------/